<!DOCTYPE html>
<html lang="US">

<head>
  <title>Search</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset="utf-8">
  <meta property="og:url" content="/search" />
  <meta property="og:type" content="website" />
  <meta property="og:title" content="<%- siteName %>" />
  <meta property="og:site_name" content="<%- siteName %>" />
  <meta property="og:image" content="/assets/icons/rel_icon.png" />
  <meta property="og:image:alt" content="<%- siteName %>" />
  <meta name="description" content="<%- siteDescription %>" />

  <!--Twitter meta tags-->
  <meta name="twitter:card" content="summary" />
  <meta name="twitter:site" content="@kimdennisb" />
  <meta name="twitter:description" content="<%- siteDescription %>" />
  <meta name="twitter:image" content="/assets/icons/rel_icon.png" />

  <link href="/assets/index.css" rel="stylesheet" type="text/css" />
  <link rel="icon" type="image/png" href="/assets/icons/rel_icon.png" />
  <link href="https://fonts.googleapis.com/css?family=ABeeZee" rel="stylesheet" />

</head>

<body>
  <header class="header-outer">
    <div class="header-inner">
      <div class="header-content responsive-wrapper">
        <div class="header-inner">
          <div class="header-content responsive-wrapper">

            <!--sidebar navbar-->
            <div id="myNav" class="overlay">
              <%- include("partials/public/sidenavigation.ejs"); -%>
            </div>

            <!--Toolbar-->
            <div class="header-navigation">
              <%- include("partials/toolbar.ejs"); -%>
            </div>

          </div>
        </div>
      </div>
  </header>
  <main class="main">
    <div class="main-content responsive-wrapper">
      <div class="searchwidget">
        <svg class="search_icon" xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25">
          <g fill="none" stroke="#848F91">
            <path stroke-linecap="square" d="M18.5 18.3l-5.4-5.4" stroke-width="2" />
            <circle cx="8" cy="8" r="7" stroke-width="2" />
          </g>
        </svg>
        <input type="text" class="searchPosts" name="searchPosts" placeholder="Search Posts..." />
      </div>
      <section class="showwidget"></section>
      <div id="spinner" hidden></div>
    </div>
  </main>

  <div class="bottom-toolbar">
    <div class="paginationtext-center"></div>
  </div>

</body>
<script src="/assets/sidebarhelper.js"></script>
<script>


  const showwidget = document.querySelector(".showwidget");

  const fetchedData = []

  fetch("/getsearch?s=building", {
    method: "GET",
  }).then((res) => {
    if (res.ok) return res.json();
  }).then((data) => {
    const state = {
      "querySet": data,
      "page": 1,
      dataPerPage: 3,
      window: 3,
    }
    fetchedData.push(state)
    fetchedData.push("xoxo")
  }).catch((err) => {
    console.log(err)
  });
const state = fetchedData;
  console.log("executed",state.length,fetchedData)


  //console.log("dman",getData())
  buildTitles();

  function pagination(querySet, page, dataPerPage) {
    const trimStart = (page - 1) * dataPerPage;
    const trimEnd = trimStart + dataPerPage;
    const trimmedData = querySet.slice(trimStart, trimEnd);
    const pages = Math.round(querySet.length / dataPerPage);
    return {
      "querySet": trimmedData,
      "pages": pages
    }
  }

  function pageButtons(pages) {
    const wrapper = document.querySelector(".paginationtext-center");
    wrapper.innerHTML = ``;
    console.log("pages", pages)
    let maxLeft = (state.page - Math.floor(state.window / 2));
    let maxRight = (state.page + Math.floor(state.window / 2));
    if (maxLeft < 1) {
      maxLeft = 1;
      maxRight = state.window;
    }
    if (maxRight > pages) {
      maxLeft = pages - (state.window - 1);

      if (maxLeft < 1) {
        maxLeft = 1
      }
      maxRight = pages;
    }

    for (let page = maxLeft; page <= maxRight; page++) {
      wrapper.innerHTML = `<button value=${1} class="page">&#171; First</button>` + wrapper.innerHTML;
    }

    if (state.page != pages) {
      wrapper.innerHTML += `<button value=${pages} class="page">Last &#187;</button>`;
    }
    const page = document.querySelector(".page");
    page.onclick = function () {
      showwidget.innerHTML = ``;
      state.page = Number(this.value)
      buildTitles();
    };
  }

  function buildTitles() {
    console.log(state)
    const data = pagination(state.querySet, state.page, state.dataPerPage);
    const myList = data.querySet;
    for (let i = 1; i < myList.length; i++) {
      const parentdiv = document.createElement("div");
      const childdiv = document.createElement("div");
      childdiv.classList = "article_title onlytext";
      const a = document.createElement("a");
      a.href = `/article/${data.querySet[i].title}`;
      a.target = "_self";
      a.textContent = data.querySet[i].title;
      childdiv.appendChild(a);
      parentdiv.appendChild(childdiv);
      showwidget.appendChild(parentdiv);
    }
    pageButtons(data.pages)
  }


</script>

</html>